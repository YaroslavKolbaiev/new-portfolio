[
  {
    "id": 45,
    "title": "Kolendar",
    "description": "This is a calendar scheduler application built with Vue.js. It allows users to create, view, and manage events in a user-friendly interface. The application supports various views such as day, week, and month, and includes features like event creation, editing, and deletion.",
    "stack": "Vue, TypeScript, Tailwind, Schedule-X",
    "demo": "https://yaroslavkolbaiev.github.io/calendar-vue/",
    "gitHub": "https://github.com/YaroslavKolbaiev/calendar-vue",
    "image": "/assets/calendar.jpg"
  },
  {
    "id": 17,
    "title": "okBay",
    "description": "okBay is an innovative e-commerce web application meticulously designed to revolutionize the online shopping experience. At its core, okBay aims to provide users with a seamless, efficient, and enjoyable shopping journey through the integration of cutting-edge technologies and design principles.",
    "stack": "Svelte, TypeScript, Redis, Firebase, Tailwind, SSR",
    "demo": "https://ok-bay-oqfwxo66fa-lz.a.run.app/",
    "gitHub": "https://github.com/YaroslavKolbaiev/okBay",
    "image": "/assets/ok-bayjpg.jpg"
  },
  {
    "id": 23,
    "title": "Articles Explorer",
    "description": "This project is a full-stack Next.js application designed for exploring articles. It includes features for loading articles on a schedule using a webhook, performing CRUD operations from an admin dashboard, and ensuring secure access through authorization. The project leverages modern web development tools and practices to provide a robust and maintainable codebase.",
    "stack": "NextJS, TypeScript, MongoDB, PrismaORM, Tailwind, SSR, server actions",
    "demo": "https://rss-articles-six.vercel.app/",
    "gitHub": "https://github.com/YaroslavKolbaiev/rss-articles",
    "image": "/assets/articles.jpg"
  },
  {
    "id": 10,
    "title": "Millionare Game",
    "description": "This project is a web-based version of the popular quiz game \"Who Wants to Be a Millionaire?\". It was built using React and TypeScript, showcasing the ability to create interactive and dynamic web applications.",
    "stack": "React, TypeScript, SASS, EsLint",
    "demo": "https://millionare-game-zeta.vercel.app/",
    "gitHub": "https://github.com/YaroslavKolbaiev/millionare-game",
    "image": "/assets/milioneri.jpg"
  },
  {
    "id": 9,
    "title": "Next Admin",
    "description": "The admin dashboard application designed to provide administrators with a comprehensive overview of system's status and activities. The app includes features and widgets that display key metrics and data in an easy-to-understand format, allowing administrators to monitor the system effectively and make informed decisions.",
    "stack": "NextJS, MongoDB, Mongoose, TypeScript, Tailwind, Clerk, EsLint",
    "demo": "https://next-overflow-gold.vercel.app/",
    "gitHub": "https://github.com/YaroslavKolbaiev/next-overflow",
    "image": "/assets/nextAdmin.jpg"
  },
  {
    "id": 2,
    "title": "ChatApp",
    "description": "full-stack application for real-time communication in text format. Server side is built with Node JS and client side with Next JS. When user visits the app for the first time he or she has to register and choose an account avatar. User information is stored in MongoDB database using Mongoose ORM. After successful registration, the user has to confirm an email. Email confirmation is implemented with Google Cloud Services. Socket IO is used for real time communication. For authorization and information security exchange, JWT is used.",
    "stack": "NodeJS, ExpressJS, MongoDB, NextJS, Socket.io, Google Cloud, JWT",
    "demo": "https://extraordinary-fenglisu-3921a8.netlify.app/",
    "gitHub": "https://github.com/YaroslavKolbaiev/chatic-repo",
    "image": "/assets/chat-app.jpg"
  },
  {
    "id": 1,
    "title": "Phone Catalog",
    "description": "E-commerce web-site for buying mobile phones & accessories. User is able to navigate between the pages, explore a specific product, add items to basket or favorites and much more. On the home page a beautifull slider is implemented using React Slick. When user visits products page he or she is able to sort and filter items. State management is performed using useContext hook. Website is fully responsive, paginated and has smooth animation and transition.",
    "stack": "React, TypeScript, SASS, Bulma, EsLint",
    "demo": "https://yaroslavkolbaiev.github.io/react_phone-catalog/",
    "gitHub": "https://github.com/YaroslavKolbaiev/react-phones-app",
    "image": "/assets/phones-cat.jpg"
  },
  {
    "id": 11,
    "title": "Ultimate Job",
    "description": "The \"Ultimate Job\" project is an extensive full-stack web application that serves as a comprehensive platform for job seekers and employers. It is designed to provide a seamless, efficient, and user-friendly experience, leveraging a variety of modern technologies and best practices in web development.",
    "stack": "Vue, TypeScript, Python, Django, Django Rest Framework, JWT, GDAL, PostgreSQL, EsLint",
    "demo": "https://ultimate-job.netlify.app",
    "gitHub": "https://github.com/YaroslavKolbaiev/jobs-app",
    "image": "/assets/ultimateJob.jpg"
  },
  {
    "id": 12,
    "title": "The Witcher",
    "description": "Fully animated, responsive and cross browser web site. Built with Next JS13. Styling with Tailwind CSS. Animation and transitions implemented using Framer Motion. Deployed with Vercel. ",
    "stack": "Next13 JS, Framer Motion, Tailwind CSS",
    "demo": "https://witcher-eta.vercel.app/",
    "gitHub": "https://github.com/YaroslavKolbaiev/witcher",
    "image": "/assets/theWitcher.jpg"
  },
  {
    "id": 4,
    "title": "To-do App",
    "description": "App for managing users tasks. Build with react and typescript. User is able to create, delete and change posts. All data is saved in local storage, so after page reload all information is available.",
    "stack": "React",
    "demo": "https://yaroslavkolbaiev.github.io/react_todo-app/",
    "gitHub": "https://github.com/YaroslavKolbaiev/todo-app",
    "image": "/assets/todo-app.jpg"
  },
  {
    "id": 5,
    "title": "The game 2048",
    "description": "the gGame to score 2048 points using as few moves as possible. The objective of the game is to slide numbered tiles on a grid to combine them to create a tile with the number 2048.",
    "stack": "vanilla JavaScript",
    "demo": "https://yaroslavkolbaiev.github.io/js_2048_game/",
    "gitHub": "https://github.com/YaroslavKolbaiev/2048-game",
    "image": "/assets/the-game.jpg"
  }
]
